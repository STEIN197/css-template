@use '../func';

$-border-radius-min: 0;
$-border-radius-max: 2;
$-border-radius-step: 0.1;

$-overflows: (
	v: visible,
	h: hidden,
	s: scroll,
	a: auto
);

@if func.module-enabled(misc) {
	.circle {
		border-radius: 50%;
	}
	.c-p{
		cursor: pointer;
	}

	@if func.module-enabled("misc.overflow") {
		@include func.rule-create-from-map(o, overflow, $-overflows);
		@include func.rule-create-from-map(ox, overflow-x, $-overflows);
		@include func.rule-create-from-map(oy, overflow-y, $-overflows);
	}
	@if func.module-enabled("misc.opacity") {
		.o-0{
			opacity: 0;
		}
		.o-1{
			opacity: 1;
		}
	}

	.bg-sz-cover{}
	.bg-default{
		background-position: center;
		background-size: cover;
	}

	header.fixed{
		position: fixed;
		left: 0;
		top: 0;
		width: 100%;
	}
	body.fixed{
		overflow: hidden !important;
	}
	table{
		border-collapse: collapse;
	}
	.table-wrapper{
		overflow-x: auto;
		& > table{
			min-width: 100%;
		}
	}

	.btn{
		display: inline-block;
		cursor: pointer;
		line-height: 1;
		white-space: nowrap;
		&-rounded{
			border-radius: 10rem;
		}
	}

	// Only for mobile
	@include func.media-query("md"){
		.btn-mobile{
			width: 100% !important;
			text-align: center !important;
			padding-left: 0 !important;
			padding-right: 0 !important;
		}
	}
	@if func.module-enabled("misc.border-radius") {
		@each $value in func.range-create-from-borders($-border-radius-min, $-border-radius-max, $-border-radius-step) {
			.br-#{func.selector-escape($value)} {
				border-radius: #{$value}rem;
			}
		}
	}
}
