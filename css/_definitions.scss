$font-weight: (
	"thin": 100,
	"light-x": 200,
	"light": 300,
	"regular": 400,
	"medium": 500,
	"bold-s": 600,
	"bold": 700,
	"bold-x": 800,
	"black": 900,
);
// List of used fonts
$fonts: (
	"open_sans": "Open Sans",
);
// Font-size smallest and biggest value
$fs-loop-from: 4;
$fs-loop-to: 40;

$colors: (
	"gray": #777777,
	"white": white,
	"black": black
);

$breakpoints: (
	"md": 768px,
	"lg": 992px,
	"xl": 1200px
);

$cols: 12;

$bs-container-width: (
	"md": 720px,
	"lg": 960px,
	"xl": 1170px,
);

$sides: (
	"t": top,
	"r": right,
	"b": bottom,
	"l": left,
);

$positions: (
	static,
	relative,
	absolute,
	fixed,
);

$h-loop-from: 0;
$h-loop-to: 60;
$h-factor: 10;

$offset-loops: 10;
$square-loops: 20;

$n-mr-loops: 6;

$padding-loops: 20;

$line-height-max: 30;

@mixin font($family, $filename, $weight, $type: "truetype", $path: "/css/fonts/"){
	@font-face {
		font-family: $family;
		src: url($path + $filename) format($type);
		font-weight: $weight;
	}
}

@mixin square($dimens){
	width: $dimens;
	height: $dimens;
}

@mixin circle($d){
	@include square($d);
	border-radius: 50%;
}

// Creates shadow property
@mixin shadow($y, $r, $color, $opacity: 1){
	@if $opacity == 1{
		box-shadow: 0 $y $r $color;
	} @else {
		box-shadow: 0 $y $r 0 rgba($color, $opacity);
	}
}

@mixin mq($width, $type: min){
	@if type-of($width) == string {
		@if map_has_key($breakpoints, $width) {
			$width: map_get($breakpoints, $width);
			@if $type == max {
				$width: $width - 1px;
			}
			@media (#{$type}-width: $width){
				@content;
			}
		} @else {
			@error "There is no breakpoint with $width name";
		}
	} @else {
		@if $type == max {
			$width: $width - 1px;
		}
		@media (#{$type}-width: $width){
			@content;
		}
	}
}

@mixin pseudo($pos: absolute){
	content: "";
	position: $pos;
	display: block;
}